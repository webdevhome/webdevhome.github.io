{"version":3,"sources":["links.ts","stores/appMode/appModeHooks.ts","stores/appMode/appModeReducer.ts","stores/appMode/appModeActions.ts","components/Footer/AppFooter.tsx","components/Footer/FooterDivider.tsx","components/Footer/FooterGroup.tsx","components/Footer/FooterLink.tsx","utils/jsx.ts","components/Icon/MdiIcon.tsx","components/Header/AppAction.tsx","components/Header/AppActions.tsx","components/Header/Logo.tsx","components/Header/AppHeader.tsx","components/Layout/AppContent.tsx","stores/hiddenLinks/hiddenLinksActions.ts","stores/hiddenLinks/hiddenLinksHooks.ts","stores/search/searchActions.ts","utils/getIconUrl.ts","components/Icon/DefaultIcon.tsx","components/Links/Link.tsx","components/Links/LinkGroup.tsx","components/Search/SearchHints.tsx","components/Search/SearchTargetItem.tsx","components/Search/useSearch.ts","components/Search/getUrl.tsx","components/Search/Search.tsx","stores/appSettings/appSettingsReducer.ts","stores/appSettings/appSettingsActions.ts","components/App/useThemeSwitcher.tsx","components/App/App.tsx","services/localStorage/localStorageService.ts","components/App/useCustomizeMode.tsx","components/App/useSearchMode.tsx","services/localStorage/migrations/v1.ts","services/localStorage/values/themeSetting.ts","stores/persistToLocalStorage.ts","stores/index.ts","stores/hiddenLinks/hiddenLinksReducer.ts","stores/search/searchReducer.ts","services/localStorage/values/hiddenLinks.ts","index.tsx"],"names":["links","items","useIsCurrentAppMode","currentMode","useSelector","state","appMode","modes","includes","AppMode","SET_MODE","setAppMode","mode","type","payload","toggleAppMode","default","initialState","AppFooter","memo","children","className","FooterDivider","FooterGroup","title","FooterLink","text","url","href","classes","classesObject","result","Object","entries","push","join","MdiIcon","path","color","Icon","style","width","height","AppAction","icon","action","active","actionClasses","useMemo","onClick","AppActions","Logo","AppHeader","AppContent","SET_HIDDEN_LINKS","TOGGLE_HIDDEN_LINK","TOGGLE_HIDDEN_LINKS_GROUP","toggleHiddenLinksGroup","useLinkIsHidden","hiddenLinks","link","SET_SEARCH_TERM","SET_ON_SITE_SEARCH_TERM","SET_CURRENT_SEARCH_TARGET","setSearchTerm","searchTerm","setSearchTarget","searchTarget","getIconUrl","process","REACT_APP_PUBLIC_URL","DefaultIcon","mdiLinkVariant","Link","searchable","visible","focus","isCurrentAppMode","dispatch","useDispatch","isCustomizeMode","customize","handleLinkClick","useCallback","event","preventDefault","toggleHiddenLink","handleSearchClick","stopPropagation","search","linkClasses","rel","undefined","src","mdiMagnify","mdiEye","mdiEyeOff","LinkGroup","group","allLinksInGroupAreHidden","every","useAllLinksInGroupAreHidden","linkIsHidden","linkGroupClasses","map","allGroupLinksAreHidden","handleToggleGroupClick","name","mdiTableEyeOff","mdiTableEye","searchUrl","SearchHints","SearchTargetLabel","searchTargetIcon","iconUrl","fuzzyOptions","key","allowTypo","limit","useSearch","searchInputRef","onSiteSearchTerm","useState","keyboardIndex","setKeyboardIndex","visibleLinks","flatMap","filter","results","fuzzy","go","focusedResult","useEffect","setTimeout","current","handleGlobalKeydown","length","globalThis","document","activeElement","addEventListener","removeEventListener","handleInputChange","target","value","setOnSiteSearchTerm","handleInputKeydown","obj","focusedItem","concatChar","searchConcat","encodedSearchTerm","replace","getUrl","ctrlKey","window","open","location","shiftKey","Math","max","min","total","AppTheme","Search","useRef","ref","placeholder","onChange","onKeyDown","theme","auto","SET_THEME","useThemeSwitcher","currentTheme","appSettings","bodyElement","getElementsByTagName","light","mdiWeatherSunny","dark","mdiWeatherNight","mdiThemeLightDark","switchTheme","cycleTheme","StorageKey","WebdevHome","customizeMode","currentAppMode","handleCustomizeAction","useCustomizeMode","searchMode","handleGlobalKeypress","handleSearchAction","useSearchMode","themeSwitcher","mdiFormatListChecks","version","migrateToV1","wrongThemeSettingKey","themeSetting","localStorage","getItem","setStorageValue","removeItem","storageVersion","getStorageValue","fallback","setItem","removeStorageValue","saveThemeSetting","currentVersion","migrations","v0","forEach","migration","migrateLocalStorage","lastState","store","rootReducer","combineReducers","missingLinks","createStore","storageString","hiddenItems","storageValue","JSON","parse","Array","isArray","some","loadHiddenLinks","noThemeValue","invalidThemeValue","loadThemeSetting","composeWithDevTools","trace","subscribe","getState","values","stringify","Error","saveHiddenLinks","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2a757b85.chunk.js","sourcesContent":["import linksData from './links.json'\nimport { OptionalExceptFor } from './utilityTypes'\n\nexport interface LinkItem {\n  title: string\n  url: string\n  icon?: string\n  color?: string\n  iconComp?: JSX.Element\n  searchUrl?: string\n  searchConcat?: string\n}\n\nexport type SearchTarget = OptionalExceptFor<\n  LinkItem,\n  'title' | 'url' | 'searchUrl'\n>\n\nexport interface LinkGroup {\n  name: string\n  items: LinkItem[]\n}\n\nexport interface Links {\n  items: LinkGroup[]\n}\n\nexport const links: Links = {\n  items: linksData.items,\n}\n\nexport function getAllLinks(): LinkItem[] {\n  return links.items.flatMap((group) => group.items)\n}\n","import { useSelector } from 'react-redux'\nimport { AppState } from '..'\nimport { AppMode } from './appModeReducer'\n\nexport function useIsCurrentAppMode(): (...mode: AppMode[]) => boolean {\n  const currentMode = useSelector(\n    (state: AppState) => state.appMode.currentMode\n  )\n\n  return function isCurrentAppMode(...modes) {\n    return modes.includes(currentMode)\n  }\n}\n","import { AppActions } from '../actions'\nimport { SET_MODE } from './appModeActions'\n\nexport enum AppMode {\n  default = 'DEFAULT',\n  search = 'SEARCH',\n  customize = 'CUSTOMIZE',\n}\n\nexport interface AppModeState {\n  currentMode: AppMode\n}\n\nconst initialState: AppModeState = {\n  currentMode: AppMode.default,\n}\n\nexport function appMode(\n  state = initialState,\n  action: AppActions\n): AppModeState {\n  switch (action.type) {\n    case SET_MODE: {\n      return { ...state, currentMode: action.payload }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { AppMode } from './appModeReducer'\n\nexport const SET_MODE = 'SET_MODE'\n\ninterface SetModeAction {\n  type: typeof SET_MODE\n  payload: AppMode\n}\n\nexport type AppModeActions = SetModeAction\n\nexport function setAppMode(mode: AppMode): SetModeAction {\n  return { type: SET_MODE, payload: mode }\n}\n\nexport function toggleAppMode(\n  mode: AppMode,\n  currentMode: AppMode\n): SetModeAction {\n  return {\n    type: SET_MODE,\n    payload: currentMode === AppMode.default ? mode : AppMode.default,\n  }\n}\n","import React, { memo } from 'react'\nimport './AppFooter.scss'\n\nexport const AppFooter = memo(function AppFooter({ children }) {\n  return <div className=\"app-footer\">{children}</div>\n})\n","import React, { memo } from 'react'\nimport './FooterDivider.scss'\n\nexport const FooterDivider = memo(function FooterDivider() {\n  return <div className=\"footer-divider\"></div>\n})\n","import React, { memo, PropsWithChildren } from 'react'\nimport './FooterGroup.scss'\n\ninterface Props {\n  title: string\n}\n\nexport const FooterGroup = memo<PropsWithChildren<Props>>(function FooterGroup({\n  children,\n  title,\n}) {\n  return (\n    <div className=\"footer-group\">\n      <div className=\"footer-group__title\">{title}</div>\n      {children}\n    </div>\n  )\n})\n","import React, { memo } from 'react'\nimport './FooterLink.scss'\n\ninterface Props {\n  text: string\n  url: string\n}\n\nexport const FooterLink = memo<Props>(function FooterLink({ text, url }) {\n  return (\n    <a href={url} className=\"footer-link\">\n      {text}\n    </a>\n  )\n})\n","export function classes(classesObject: Record<string, boolean>): string {\n  const result: string[] = []\n\n  for (const [className, condition] of Object.entries(classesObject)) {\n    if (condition === true) {\n      result.push(className)\n    }\n  }\n\n  return result.join(' ')\n}\n","import { Icon } from '@mdi/react'\nimport React, { memo } from 'react'\n\ninterface Props {\n  path: string\n  className?: string\n  color?: string\n}\n\nexport const MdiIcon = memo<Props>(function MdiIcon({ path, color }) {\n  return <Icon style={{ width: 24, height: 24 }} path={path} color={color} />\n})\n","import React, { memo, useMemo } from 'react'\nimport { classes } from '../../utils/jsx'\nimport { MdiIcon } from '../Icon/MdiIcon'\nimport './AppAction.scss'\n\ninterface Props {\n  icon: string\n  active: boolean\n  action: () => void\n}\n\nexport const AppAction = memo<Props>(function AppAction({\n  icon,\n  action,\n  active,\n}) {\n  const actionClasses = useMemo(\n    () => ({\n      'app-action': true,\n      'app-action--is-active': active,\n    }),\n    [active]\n  )\n\n  return (\n    <div className={classes(actionClasses)} onClick={action}>\n      <MdiIcon path={icon} />\n    </div>\n  )\n})\n","import React, { memo } from 'react'\nimport './AppActions.scss'\n\nexport const AppActions = memo(function AppActions({ children }) {\n  return <div className=\"app-actions\">{children}</div>\n})\n","import React, { memo } from 'react'\nimport './Logo.scss'\n\nexport const Logo = memo(function Logo() {\n  return (\n    <div className=\"logo\">\n      <span className=\"logo__shape\">&lt;</span>\n      <span className=\"logo__char-1\">Webdev</span>\n      <span className=\"logo__char-2\">Home</span>\n      <span className=\"logo__shape\"> /&gt;</span>\n    </div>\n  )\n})\n","import React, { memo } from 'react'\nimport './AppHeader.scss'\nimport { Logo } from './Logo'\n\nexport const AppHeader = memo(function AppHeader() {\n  return (\n    <div className=\"app-header\">\n      <div className=\"app-header__logo\">\n        <Logo />\n      </div>\n    </div>\n  )\n})\n","import React, { memo } from 'react'\nimport './AppContent.scss'\n\nexport const AppContent = memo(function AppContent({ children }) {\n  return <div className=\"app-content\">{children}</div>\n})\n","import { LinkItem } from '../../links'\n\nexport const SET_HIDDEN_LINKS = 'SET_HIDDEN_LINKS'\nexport const TOGGLE_HIDDEN_LINK = 'TOGGLE_HIDDEN_LINK'\nexport const TOGGLE_HIDDEN_LINKS_GROUP = 'TOGGLE_HIDDEN_LINKS_GROUP'\n\ninterface SetHiddenLinksAction {\n  type: typeof SET_HIDDEN_LINKS\n  payload: Array<LinkItem['url']>\n}\n\ninterface ToggleHiddenLinkAction {\n  type: typeof TOGGLE_HIDDEN_LINK\n  payload: LinkItem['url']\n}\n\ninterface ToggleHiddenLinksGroup {\n  type: typeof TOGGLE_HIDDEN_LINKS_GROUP\n  payload: Array<LinkItem['url']>\n}\n\nexport type HiddenLinksActions =\n  | SetHiddenLinksAction\n  | ToggleHiddenLinkAction\n  | ToggleHiddenLinksGroup\n\nexport function setHiddenLinks(\n  links: Array<LinkItem['url']>\n): SetHiddenLinksAction {\n  return { type: SET_HIDDEN_LINKS, payload: links }\n}\n\nexport function toggleHiddenLink(\n  link: LinkItem['url']\n): ToggleHiddenLinkAction {\n  return { type: TOGGLE_HIDDEN_LINK, payload: link }\n}\n\nexport function toggleHiddenLinksGroup(\n  links: Array<LinkItem['url']>\n): ToggleHiddenLinksGroup {\n  return { type: TOGGLE_HIDDEN_LINKS_GROUP, payload: links }\n}\n","import { useSelector } from 'react-redux'\nimport { AppState } from '..'\nimport { LinkItem } from '../../links'\n\nexport function useAllLinksInGroupAreHidden(): (\n  links: Array<LinkItem['url']>\n) => boolean {\n  const hiddenLinks = useSelector((state: AppState) => state.hiddenLinks.links)\n\n  return function allLinksInGroupAreHidden(links) {\n    return links.every((link) => hiddenLinks.includes(link))\n  }\n}\n\nexport function useLinkIsHidden(): (link: LinkItem) => boolean {\n  const hiddenLinks = useSelector((state: AppState) => state.hiddenLinks.links)\n\n  return function linkIsHidden(link) {\n    return hiddenLinks.includes(link.url)\n  }\n}\n","import { SearchTarget } from '../../links'\n\nexport const SET_SEARCH_TERM = 'SET_SEARCH_TERM'\nexport const SET_ON_SITE_SEARCH_TERM = 'SET_ON_SITE_SEARCH_TERM'\nexport const SET_CURRENT_SEARCH_TARGET = 'SET_CURRENT_SEARCH_TARGET'\n\ninterface SetSearchTermAction {\n  type: typeof SET_SEARCH_TERM\n  payload: string\n}\n\ninterface SetOnSiteSearchTermAction {\n  type: typeof SET_ON_SITE_SEARCH_TERM\n  payload: string\n}\n\ninterface SetSearchTargetAction {\n  type: typeof SET_CURRENT_SEARCH_TARGET\n  payload: SearchTarget | null\n}\n\nexport type SearchActions =\n  | SetSearchTermAction\n  | SetOnSiteSearchTermAction\n  | SetSearchTargetAction\n\nexport function setSearchTerm(searchTerm: string): SetSearchTermAction {\n  return { type: SET_SEARCH_TERM, payload: searchTerm }\n}\n\nexport function setOnSiteSearchTerm(\n  searchTerm: string\n): SetOnSiteSearchTermAction {\n  return { type: SET_ON_SITE_SEARCH_TERM, payload: searchTerm }\n}\n\nexport function setSearchTarget(\n  searchTarget: SearchTarget | null\n): SetSearchTargetAction {\n  return { type: SET_CURRENT_SEARCH_TARGET, payload: searchTarget }\n}\n","export function getIconUrl(icon: string): string {\n  return `${process.env.REACT_APP_PUBLIC_URL ?? ''}/simple-icons/${icon}.svg`\n}\n","import { mdiLinkVariant } from '@mdi/js'\nimport React, { memo } from 'react'\nimport { MdiIcon } from './MdiIcon'\n\nexport const DefaultIcon = memo(function DefaultIcon() {\n  return (\n    <div className=\"default-icon\">\n      <MdiIcon path={mdiLinkVariant} color=\"#eee\" />\n    </div>\n  )\n})\n","import { mdiEye, mdiEyeOff, mdiMagnify } from '@mdi/js'\nimport React, { memo, MouseEvent, useCallback, useMemo } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { ReactSVG } from 'react-svg'\nimport { LinkItem, SearchTarget } from '../../links'\nimport { AppDispatch } from '../../stores'\nimport { setAppMode } from '../../stores/appMode/appModeActions'\nimport { useIsCurrentAppMode } from '../../stores/appMode/appModeHooks'\nimport { AppMode } from '../../stores/appMode/appModeReducer'\nimport { toggleHiddenLink } from '../../stores/hiddenLinks/hiddenLinksActions'\nimport { setSearchTarget } from '../../stores/search/searchActions'\nimport { getIconUrl } from '../../utils/getIconUrl'\nimport { classes } from '../../utils/jsx'\nimport { DefaultIcon } from '../Icon/DefaultIcon'\nimport { MdiIcon } from '../Icon/MdiIcon'\nimport './Link.scss'\n\ninterface Props {\n  link: LinkItem\n  searchable?: boolean\n  visible?: boolean\n  focus?: boolean\n}\n\nexport const Link = memo<Props>(function Link({\n  link,\n  searchable = false,\n  visible = true,\n  focus = false,\n}) {\n  const isCurrentAppMode = useIsCurrentAppMode()\n  const dispatch: AppDispatch = useDispatch()\n\n  const isCustomizeMode = useMemo(() => isCurrentAppMode(AppMode.customize), [\n    isCurrentAppMode,\n  ])\n\n  const handleLinkClick = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>): void => {\n      if (!isCustomizeMode) return\n\n      event.preventDefault()\n      dispatch(toggleHiddenLink(link.url))\n    },\n    [dispatch, isCustomizeMode, link.url]\n  )\n\n  const handleSearchClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      event.stopPropagation()\n      event.preventDefault()\n      dispatch(setAppMode(AppMode.search))\n      dispatch(setSearchTarget(link as SearchTarget))\n    },\n    [dispatch, link]\n  )\n\n  const linkClasses = useMemo(\n    () =>\n      classes({\n        link: true,\n        'link--is-visible': visible,\n        'link--has-focus': focus,\n        'link--customize-mode': isCustomizeMode,\n      }),\n    [focus, isCustomizeMode, visible]\n  )\n\n  if (!isCustomizeMode && !visible) return null\n\n  return (\n    <a\n      href={link.url}\n      rel=\"noreferrer\"\n      className={linkClasses}\n      onClick={handleLinkClick}\n    >\n      <div className=\"link__icon-container\" style={{ color: link.color }}>\n        {link.icon !== undefined ? (\n          <ReactSVG src={getIconUrl(link.icon)} className=\"link__icon\" />\n        ) : (\n          <DefaultIcon />\n        )}\n      </div>\n\n      <div className=\"link__label\">{link.title}</div>\n\n      <div className=\"link__actions\">\n        {searchable && !isCustomizeMode ? (\n          <>\n            <div className=\"link__info\">\n              <span className=\"link__info-text\">\n                <kbd>Tab</kbd>\n              </span>\n            </div>\n            <div className=\"link__action\" onClick={handleSearchClick}>\n              <MdiIcon path={mdiMagnify} />\n            </div>\n          </>\n        ) : null}\n\n        {isCustomizeMode ? (\n          <div className=\"link__action\">\n            <MdiIcon path={visible ? mdiEye : mdiEyeOff} />\n          </div>\n        ) : null}\n      </div>\n    </a>\n  )\n})\n","import { mdiTableEye, mdiTableEyeOff } from '@mdi/js'\nimport React, { memo, useCallback, useMemo } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { LinkGroup as ILinkGroup, LinkItem } from '../../links'\nimport { useIsCurrentAppMode } from '../../stores/appMode/appModeHooks'\nimport { AppMode } from '../../stores/appMode/appModeReducer'\nimport { toggleHiddenLinksGroup } from '../../stores/hiddenLinks/hiddenLinksActions'\nimport {\n  useAllLinksInGroupAreHidden,\n  useLinkIsHidden\n} from '../../stores/hiddenLinks/hiddenLinksHooks'\nimport { classes } from '../../utils/jsx'\nimport { MdiIcon } from '../Icon/MdiIcon'\nimport { Link } from './Link'\nimport './LinkGroup.scss'\n\ninterface Props {\n  group: ILinkGroup\n}\n\nexport const LinkGroup = memo<Props>(function LinkGroup({ group }) {\n  const allLinksInGroupAreHidden = useAllLinksInGroupAreHidden()\n  const isCurrentAppMode = useIsCurrentAppMode()\n  const linkIsHidden = useLinkIsHidden()\n  const dispatch = useDispatch()\n\n  const linkGroupClasses = useMemo(() => {\n    return classes({\n      'link-group': true,\n      'link-group--is-visible':\n        !allLinksInGroupAreHidden(group.items.map((link) => link.url)) ?? false,\n    })\n  }, [allLinksInGroupAreHidden, group.items])\n\n  const allGroupLinksAreHidden = useCallback(\n    (items: LinkItem[]): boolean => {\n      return allLinksInGroupAreHidden(items.map((link) => link.url))\n    },\n    [allLinksInGroupAreHidden]\n  )\n\n  const handleToggleGroupClick = useCallback(\n    (...items: LinkItem[]): void => {\n      dispatch(toggleHiddenLinksGroup(items.map((link) => link.url)))\n    },\n    [dispatch]\n  )\n\n  const noVisibleLinksInGroup = useMemo(() => {\n    return allLinksInGroupAreHidden(group.items.map((link) => link.url))\n  }, [allLinksInGroupAreHidden, group.items])\n\n  if (noVisibleLinksInGroup && !isCurrentAppMode(AppMode.customize)) {\n    return null\n  }\n\n  return (\n    <div className={linkGroupClasses}>\n      <div className=\"link-group__header\">\n        <div className=\"link-group__name\">{group.name}</div>\n\n        {isCurrentAppMode(AppMode.customize) ? (\n          <div\n            className=\"link-group__action\"\n            onClick={() => handleToggleGroupClick(...group.items)}\n          >\n            {allGroupLinksAreHidden(group.items) ? (\n              <MdiIcon path={mdiTableEyeOff} />\n            ) : (\n              <MdiIcon path={mdiTableEye} />\n            )}\n          </div>\n        ) : null}\n      </div>\n      <div className=\"link-group__list\">\n        {group.items.map((link) => (\n          <Link\n            key={link.url}\n            link={link}\n            searchable={link.searchUrl !== undefined}\n            visible={!linkIsHidden(link)}\n          />\n        ))}\n      </div>\n    </div>\n  )\n})\n","import React, { memo } from 'react'\n\nexport const SearchHints = memo(function SearchHints() {\n  return (\n    <>\n      <div className=\"search__results-hint\">Type ahead to filter links.</div>\n      <div className=\"search__results-hint\">\n        <kbd>Return</kbd>\n        <div className=\"search__results-hint-description\">Open link</div>\n      </div>\n      <div className=\"search__results-hint\">\n        <kbd>Ctrl</kbd> + <kbd>Return</kbd>\n        <div className=\"search__results-hint-description\">\n          Open link in a new tab (background)\n        </div>\n      </div>\n      <div className=\"search__results-hint\">\n        <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>Return</kbd>\n        <div className=\"search__results-hint-description\">\n          Open link in a new tab (foreground)\n        </div>\n      </div>\n    </>\n  )\n})\n","import React, { memo, useMemo } from 'react'\nimport { ReactSVG } from 'react-svg'\nimport { LinkItem } from '../../links'\nimport { getIconUrl } from '../../utils/getIconUrl'\nimport './SearchTargetItem.scss'\n\ninterface Props {\n  title: LinkItem['title']\n  icon: LinkItem['icon']\n  color: LinkItem['color']\n}\n\nexport const SearchTargetLabel = memo<Props>(function SearchTargetItem({\n  title,\n  icon,\n  color,\n}) {\n  const searchTargetIcon = useMemo(() => {\n    if (icon === undefined) return null\n\n    const iconUrl = getIconUrl(icon)\n\n    return (\n      <span className=\"search-target-item__icon-container\" style={{ color }}>\n        <ReactSVG src={iconUrl} className=\"search-target-item__icon\" />\n      </span>\n    )\n  }, [color, icon])\n\n  return (\n    <div className=\"search-target-item\">\n      Search on {searchTargetIcon} {title}:\n    </div>\n  )\n})\n","import fuzzy from 'fuzzysort'\nimport {\n  ChangeEvent,\n  KeyboardEvent,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAllLinks, LinkItem, SearchTarget } from '../../links'\nimport { AppState } from '../../stores'\nimport { setAppMode } from '../../stores/appMode/appModeActions'\nimport { AppMode } from '../../stores/appMode/appModeReducer'\nimport { useLinkIsHidden } from '../../stores/hiddenLinks/hiddenLinksHooks'\nimport {\n  setOnSiteSearchTerm,\n  setSearchTarget,\n  setSearchTerm,\n} from '../../stores/search/searchActions'\nimport { getUrl } from './getUrl'\n\nconst fuzzyOptions = { key: 'title', allowTypo: false, limit: 6 }\n\ninterface UseSearchParams {\n  searchInputRef: RefObject<HTMLInputElement>\n}\n\ninterface UseSearchReturn {\n  results: Fuzzysort.KeyResults<LinkItem> | null\n  focusedResult: Fuzzysort.KeyResult<LinkItem> | null\n  handleInputKeydown: (event: KeyboardEvent<HTMLInputElement>) => void\n  handleInputChange: (event: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport function useSearch({\n  searchInputRef,\n}: UseSearchParams): UseSearchReturn {\n  const searchTerm = useSelector((state: AppState) => state.search.searchTerm)\n  const onSiteSearchTerm = useSelector(\n    (state: AppState) => state.search.onSiteSearchTerm\n  )\n  const linkIsHidden = useLinkIsHidden()\n  const dispatch = useDispatch()\n  const searchTarget = useSelector(\n    (state: AppState) => state.search.searchTarget\n  )\n\n  const [keyboardIndex, setKeyboardIndex] = useState<number>(0)\n\n  const visibleLinks = useMemo(() => {\n    return getAllLinks().filter((link) => !linkIsHidden(link))\n  }, [linkIsHidden])\n\n  const results = useMemo(() => {\n    if (visibleLinks === null) return null\n    if (searchTerm === '') return null\n    if (searchTarget !== null) return null\n\n    return fuzzy.go(searchTerm, visibleLinks, fuzzyOptions)\n  }, [searchTarget, searchTerm, visibleLinks])\n\n  const focusedResult = useMemo(() => {\n    return results?.[keyboardIndex] ?? null\n  }, [keyboardIndex, results])\n\n  useEffect(() => {\n    setTimeout(() => {\n      searchInputRef.current?.focus()\n    }, 0)\n  }, [searchInputRef])\n\n  const handleGlobalKeydown = useCallback(\n    (event: globalThis.KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        if (searchTarget !== null) {\n          event.preventDefault()\n          dispatch(setSearchTarget(null))\n          if (searchTerm === '') {\n            dispatch(setAppMode(AppMode.default))\n          }\n        } else {\n          event.preventDefault()\n          dispatch(setAppMode(AppMode.default))\n        }\n        return\n      }\n\n      if (event.key.length === 1) {\n        if (searchInputRef.current === null) return\n        if (searchInputRef.current !== globalThis.document.activeElement) {\n          searchInputRef.current.focus()\n        }\n      }\n    },\n    [dispatch, searchInputRef, searchTarget, searchTerm]\n  )\n\n  useEffect(() => {\n    globalThis.addEventListener('keydown', handleGlobalKeydown)\n    return () => {\n      globalThis.removeEventListener('keydown', handleGlobalKeydown)\n    }\n  }, [handleGlobalKeydown])\n\n  const handleInputChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>): void => {\n      if (searchTarget === null) {\n        dispatch(setSearchTerm(event.target.value))\n      } else {\n        dispatch(setOnSiteSearchTerm(event.target.value))\n      }\n\n      setKeyboardIndex(0)\n    },\n    [dispatch, searchTarget, setKeyboardIndex]\n  )\n\n  const handleInputKeydown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>): void => {\n      switch (event.key) {\n        case 'Backspace': {\n          if (searchTarget !== null && onSiteSearchTerm === '') {\n            event.preventDefault()\n            dispatch(setSearchTarget(null))\n            if (searchTerm === '') {\n              dispatch(setAppMode(AppMode.default))\n            }\n          } else if (searchTerm === '' && onSiteSearchTerm === '') {\n            event.preventDefault()\n            dispatch(setAppMode(AppMode.default))\n          }\n\n          break\n        }\n\n        case 'Tab': {\n          event.preventDefault()\n\n          if (searchTarget !== null) return\n          if (focusedResult === null) return\n          if (focusedResult.obj.searchUrl === undefined) return\n\n          dispatch(setSearchTarget(focusedResult.obj as SearchTarget))\n          break\n        }\n\n        case 'Enter': {\n          const url = getUrl(\n            focusedResult?.obj ?? null,\n            searchTarget,\n            onSiteSearchTerm\n          )\n\n          if (url === null) return\n\n          if (event.ctrlKey) {\n            window.open(url, '', 'alwaysRaised=on')\n          } else {\n            window.location.href = url\n          }\n\n          if (event.ctrlKey || event.shiftKey) {\n            dispatch(setAppMode(AppMode.default))\n          }\n          break\n        }\n\n        case 'ArrowUp': {\n          if (results === null) return\n\n          event.preventDefault()\n          setKeyboardIndex(Math.max(0, keyboardIndex - 1))\n          break\n        }\n\n        case 'ArrowDown': {\n          if (results === null) return\n\n          event.preventDefault()\n          setKeyboardIndex(Math.min(results.total - 1, keyboardIndex + 1))\n        }\n      }\n    },\n    [\n      dispatch,\n      focusedResult,\n      keyboardIndex,\n      onSiteSearchTerm,\n      results,\n      searchTarget,\n      searchTerm,\n    ]\n  )\n\n  return { results, focusedResult, handleInputKeydown, handleInputChange }\n}\n","import { LinkItem, SearchTarget } from '../../links'\n\nexport function getUrl(\n  focusedItem: LinkItem | null,\n  searchTarget?: SearchTarget | null,\n  searchTerm?: string\n): string | null {\n  if (\n    searchTarget !== null &&\n    searchTarget !== undefined &&\n    searchTerm !== undefined &&\n    searchTerm !== ''\n  ) {\n    const concatChar = searchTarget.searchConcat ?? '+'\n    const encodedSearchTerm = searchTerm.replace(/ /g, concatChar)\n    return searchTarget.searchUrl.replace(/\\{search\\}/, encodedSearchTerm)\n  }\n\n  return focusedItem !== null ? focusedItem.url : null\n}\n","import React, { memo, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../../stores'\nimport { Link } from '../Links/Link'\nimport './Search.scss'\nimport { SearchHints } from './SearchHints'\nimport { SearchTargetLabel } from './SearchTargetItem'\nimport { useSearch } from './useSearch'\n\nexport const Search = memo(function Search() {\n  const searchInputRef = useRef<HTMLInputElement>(null)\n\n  const { searchTerm, onSiteSearchTerm, searchTarget } = useSelector(\n    (state: AppState) => ({\n      searchTerm: state.search.searchTerm,\n      onSiteSearchTerm: state.search.onSiteSearchTerm,\n      searchTarget: state.search.searchTarget,\n    })\n  )\n\n  const {\n    handleInputKeydown,\n    results,\n    focusedResult,\n    handleInputChange,\n  } = useSearch({ searchInputRef })\n\n  return (\n    <div className=\"search\">\n      {searchTarget !== null ? (\n        <SearchTargetLabel\n          title={searchTarget.title}\n          icon={searchTarget.icon}\n          color={searchTarget.color}\n        />\n      ) : null}\n\n      <input\n        ref={searchInputRef}\n        className=\"search__input\"\n        type=\"text\"\n        placeholder={searchTarget === null ? 'Search links...' : 'Search...'}\n        value={searchTarget === null ? searchTerm : onSiteSearchTerm}\n        onChange={handleInputChange}\n        onKeyDown={handleInputKeydown}\n      />\n\n      <div className=\"search__results\">\n        {searchTarget === null ? (\n          searchTerm === '' ? (\n            <SearchHints />\n          ) : results !== null && results.total > 0 ? (\n            results.map((link) => (\n              <Link\n                key={link.obj.url}\n                link={link.obj}\n                searchable={link.obj.searchUrl !== undefined}\n                visible={true}\n                focus={link === focusedResult}\n              />\n            ))\n          ) : (\n            <div className=\"search__results-hint\">No results found...</div>\n          )\n        ) : null}\n      </div>\n    </div>\n  )\n})\n","import { AppSettingsActions, SET_THEME } from './appSettingsActions'\n\nexport enum AppTheme {\n  auto = 'auto',\n  light = 'light',\n  dark = 'dark',\n}\n\ninterface AppSettingsState {\n  theme: AppTheme\n}\n\nconst initialState: AppSettingsState = {\n  theme: AppTheme.auto,\n}\n\nexport function appSettings(\n  state = initialState,\n  action: AppSettingsActions\n): AppSettingsState {\n  switch (action.type) {\n    case SET_THEME: {\n      return { ...state, theme: action.payload }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { AppTheme } from './appSettingsReducer'\n\nexport const SET_THEME = 'SET_THEME'\n\ninterface SetThemeAction {\n  type: typeof SET_THEME\n  payload: AppTheme\n}\n\nexport type AppSettingsActions = SetThemeAction\n\nexport function setTheme(theme: AppTheme): SetThemeAction {\n  return { type: SET_THEME, payload: theme }\n}\n\nexport function cycleTheme(currentTheme: AppTheme): SetThemeAction {\n  switch (currentTheme) {\n    case AppTheme.auto: {\n      return { type: SET_THEME, payload: AppTheme.light }\n    }\n\n    case AppTheme.light: {\n      return { type: SET_THEME, payload: AppTheme.dark }\n    }\n\n    case AppTheme.dark: {\n      return { type: SET_THEME, payload: AppTheme.auto }\n    }\n  }\n}\n","import { mdiThemeLightDark, mdiWeatherNight, mdiWeatherSunny } from '@mdi/js'\nimport { useCallback, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppState } from '../../stores'\nimport { cycleTheme } from '../../stores/appSettings/appSettingsActions'\nimport { AppTheme } from '../../stores/appSettings/appSettingsReducer'\n\nexport interface UseThemeSwitcherReturn {\n  icon: string\n  switchTheme: () => void\n}\n\nexport function useThemeSwitcher(): UseThemeSwitcherReturn {\n  const dispatch = useDispatch()\n  const currentTheme = useSelector((state: AppState) => state.appSettings.theme)\n\n  const bodyElement = useMemo(\n    () => globalThis.document.getElementsByTagName('body')[0],\n    []\n  )\n\n  useEffect(() => {\n    bodyElement.className = `${currentTheme}-theme`\n  }, [bodyElement, currentTheme])\n\n  const icon = useMemo((): string => {\n    switch (currentTheme) {\n      case AppTheme.light:\n        return mdiWeatherSunny\n      case AppTheme.dark:\n        return mdiWeatherNight\n      default:\n        return mdiThemeLightDark\n    }\n  }, [currentTheme])\n\n  const switchTheme = useCallback((): void => {\n    dispatch(cycleTheme(currentTheme))\n  }, [currentTheme, dispatch])\n\n  return { icon, switchTheme }\n}\n","import {\n  mdiFormatListChecks,\n  mdiMagnify\n} from '@mdi/js'\nimport React, { FC } from 'react'\nimport { version } from '../../../package.json'\nimport { links } from '../../links'\nimport { useIsCurrentAppMode } from '../../stores/appMode/appModeHooks'\nimport { AppMode } from '../../stores/appMode/appModeReducer'\nimport { AppFooter } from '../Footer/AppFooter'\nimport { FooterDivider } from '../Footer/FooterDivider'\nimport { FooterGroup } from '../Footer/FooterGroup'\nimport { FooterLink } from '../Footer/FooterLink'\nimport { AppAction } from '../Header/AppAction'\nimport { AppActions } from '../Header/AppActions'\nimport { AppHeader } from '../Header/AppHeader'\nimport { AppContent } from '../Layout/AppContent'\nimport { LinkGroup } from '../Links/LinkGroup'\nimport { Search } from '../Search/Search'\nimport './App.scss'\nimport { useCustomizeMode } from './useCustomizeMode'\nimport { useSearchMode } from './useSearchMode'\nimport { useThemeSwitcher } from './useThemeSwitcher'\n\nexport const WebdevHome: FC = () => {\n  const customizeMode = useCustomizeMode()\n  const searchMode = useSearchMode()\n  const themeSwitcher = useThemeSwitcher()\n  const isCurrentAppMode = useIsCurrentAppMode()\n\n  return (\n    <div className=\"app\">\n      <AppHeader />\n\n      <AppActions>\n        <AppAction\n          icon={mdiMagnify}\n          action={searchMode.handleSearchAction}\n          active={isCurrentAppMode(AppMode.search)}\n        />\n        <AppAction\n          icon={themeSwitcher.icon}\n          action={themeSwitcher.switchTheme}\n          active={false}\n        />\n        <AppAction\n          icon={mdiFormatListChecks}\n          action={customizeMode.handleCustomizeAction}\n          active={isCurrentAppMode(AppMode.customize)}\n        />\n      </AppActions>\n\n      {isCurrentAppMode(AppMode.default, AppMode.customize) ? (\n        <AppContent>\n          {links.items.map((group) => (\n            <LinkGroup group={group} key={group.name} />\n          ))}\n        </AppContent>\n      ) : (\n        <Search />\n      )}\n\n      <AppFooter>\n        <FooterGroup title={'WebdevHome v' + version}>\n          <FooterLink\n            text=\"Changelog\"\n            url=\"https://github.com/webdevhome/webdevhome.github.io/releases\"\n          />\n          <FooterLink\n            text=\"GitHub\"\n            url=\"https://github.com/webdevhome/webdevhome.github.io\"\n          />\n        </FooterGroup>\n\n        <FooterDivider />\n\n        <FooterGroup title=\"Icons\">\n          <FooterLink\n            text=\"Material Design Icons\"\n            url=\"https://materialdesignicons.com\"\n          />\n          <FooterLink text=\"Simple Icons\" url=\"https://simpleicons.org/\" />\n        </FooterGroup>\n      </AppFooter>\n    </div>\n  )\n}\n","import { migrateToV1 } from './migrations/v1'\n\nexport enum StorageKey {\n  storageVersion = 'wdh:storage-version',\n  hiddenItems = 'wdh:hidden-items',\n  themeSetting = 'wdh:theme-setting',\n}\n\nexport function getStorageValue(key: StorageKey): string | null\nexport function getStorageValue(key: StorageKey, fallback: string): string\nexport function getStorageValue(\n  key: StorageKey,\n  fallback?: string\n): string | null {\n  return localStorage.getItem(key) ?? fallback ?? null\n}\n\nexport function setStorageValue(key: StorageKey, value: string): void {\n  localStorage.setItem(key, value)\n}\n\nexport function removeStorageValue(key: StorageKey): void {\n  localStorage.removeItem(key)\n}\n\nmigrateLocalStorage()\n\nfunction migrateLocalStorage(): void {\n  const currentVersion = getStorageValue(StorageKey.storageVersion, 'v0')\n\n  const migrations = {\n    v0: migrateToV1,\n  }\n\n  Object.entries(migrations).forEach(([version, migration]) => {\n    if (currentVersion !== version) return\n    migration()\n  })\n}\n","import { useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppDispatch, AppState } from '../../stores'\nimport { setAppMode, toggleAppMode } from '../../stores/appMode/appModeActions'\nimport { useIsCurrentAppMode } from '../../stores/appMode/appModeHooks'\nimport { AppMode } from '../../stores/appMode/appModeReducer'\n\nexport interface UseCustomizeModeReturn {\n  handleCustomizeAction: () => void\n}\n\nexport function useCustomizeMode(): UseCustomizeModeReturn {\n  const dispatch: AppDispatch = useDispatch()\n  const isCurrentAppMode = useIsCurrentAppMode()\n  const currentAppMode = useSelector(\n    (state: AppState) => state.appMode.currentMode\n  )\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleGlobalKeydown)\n\n    function handleGlobalKeydown(event: KeyboardEvent): void {\n      if (event.key === 'Escape' && isCurrentAppMode(AppMode.customize)) {\n        dispatch(setAppMode(AppMode.default))\n      }\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleGlobalKeydown)\n    }\n  }, [dispatch, isCurrentAppMode])\n\n  const handleCustomizeAction = useCallback((): void => {\n    dispatch(toggleAppMode(AppMode.customize, currentAppMode))\n  }, [currentAppMode, dispatch])\n\n  return { handleCustomizeAction }\n}\n","import { useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppDispatch, AppState } from '../../stores'\nimport { setAppMode, toggleAppMode } from '../../stores/appMode/appModeActions'\nimport { useIsCurrentAppMode } from '../../stores/appMode/appModeHooks'\nimport { AppMode } from '../../stores/appMode/appModeReducer'\nimport { setSearchTerm } from '../../stores/search/searchActions'\n\nexport interface UseSearchModeReturn {\n  handleSearchAction: () => void\n}\n\nexport function useSearchMode(): UseSearchModeReturn {\n  const isCurrentAppMode = useIsCurrentAppMode()\n  const currentAppMode = useSelector(\n    (state: AppState) => state.appMode.currentMode\n  )\n  const dispatch: AppDispatch = useDispatch()\n\n  const handleGlobalKeypress = useCallback(\n    (event: KeyboardEvent) => {\n      if (isCurrentAppMode(AppMode.default)) {\n        if (event.key === '\\n') return\n        dispatch(setAppMode(AppMode.search))\n        dispatch(setSearchTerm(event.key))\n      }\n    },\n    [dispatch, isCurrentAppMode]\n  )\n\n  useEffect(() => {\n    globalThis.addEventListener('keypress', handleGlobalKeypress)\n\n    return () => {\n      globalThis.removeEventListener('keypress', handleGlobalKeypress)\n    }\n  }, [handleGlobalKeypress, isCurrentAppMode])\n\n  const handleSearchAction = useCallback((): void => {\n    dispatch(setSearchTerm(''))\n    dispatch(toggleAppMode(AppMode.search, currentAppMode))\n  }, [currentAppMode, dispatch])\n\n  return { handleSearchAction }\n}\n","import { setStorageValue, StorageKey } from '../localStorageService'\n\nexport function migrateToV1(): void {\n  const wrongThemeSettingKey = 'sdh:theme-setting'\n  const themeSetting = localStorage.getItem(wrongThemeSettingKey)\n\n  if (themeSetting !== null) {\n    setStorageValue(StorageKey.themeSetting, themeSetting)\n    localStorage.removeItem(wrongThemeSettingKey)\n  }\n\n  setStorageValue(StorageKey.storageVersion, 'v1')\n}\n","import { AppTheme } from '../../../stores/appSettings/appSettingsReducer'\nimport {\n  getStorageValue,\n  setStorageValue,\n  StorageKey\n} from '../localStorageService'\n\nexport function loadThemeSetting(): AppTheme {\n  const value = getStorageValue(StorageKey.themeSetting) as AppTheme\n\n  const noThemeValue = value === null\n  const invalidThemeValue =\n    value !== AppTheme.auto &&\n    value !== AppTheme.light &&\n    value !== AppTheme.dark\n\n  if (invalidThemeValue) saveThemeSetting(AppTheme.auto)\n  if (noThemeValue || invalidThemeValue) return AppTheme.auto\n\n  return value\n}\n\nexport function saveThemeSetting(value: AppTheme): void {\n  setStorageValue(StorageKey.themeSetting, value)\n}\n","import { saveHiddenLinks } from '../services/localStorage/values/hiddenLinks'\nimport { saveThemeSetting } from '../services/localStorage/values/themeSetting'\nimport { AppState, AppStore } from './index'\n\ninterface LastState {\n  hiddenLinks: AppState['hiddenLinks']['links'] | null\n  themeSetting: AppState['appSettings']['theme'] | null\n}\n\nconst lastState: LastState = { hiddenLinks: null, themeSetting: null }\n\nexport function persistToLocalStorage(store: AppStore): void {\n  store.subscribe(() => {\n    const state = store.getState()\n\n    const hiddenLinks = state.hiddenLinks.links\n    if (lastState.hiddenLinks !== hiddenLinks) {\n      saveHiddenLinks(hiddenLinks)\n      lastState.hiddenLinks = hiddenLinks\n    }\n\n    const themeSetting = state.appSettings.theme\n    if (lastState.themeSetting !== themeSetting) {\n      saveThemeSetting(themeSetting)\n      lastState.themeSetting = themeSetting\n    }\n  })\n}\n","import { combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { loadHiddenLinks } from '../services/localStorage/values/hiddenLinks'\nimport { loadThemeSetting } from '../services/localStorage/values/themeSetting'\nimport { appMode } from './appMode/appModeReducer'\nimport { appSettings } from './appSettings/appSettingsReducer'\nimport { hiddenLinks } from './hiddenLinks/hiddenLinksReducer'\nimport { persistToLocalStorage } from './persistToLocalStorage'\nimport { search } from './search/searchReducer'\n\nconst rootReducer = combineReducers({\n  appMode,\n  hiddenLinks,\n  search,\n  appSettings,\n})\n\nexport const store = createStore(\n  rootReducer,\n  {\n    hiddenLinks: { links: loadHiddenLinks() },\n    appSettings: { theme: loadThemeSetting() },\n  },\n  composeWithDevTools({ trace: true })()\n)\n\npersistToLocalStorage(store)\n\nexport type AppStore = typeof store\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof rootReducer>\n","import { LinkItem } from '../../links'\nimport { AppActions } from '../actions'\nimport {\n  SET_HIDDEN_LINKS,\n  TOGGLE_HIDDEN_LINK,\n  TOGGLE_HIDDEN_LINKS_GROUP\n} from './hiddenLinksActions'\n\nexport interface HiddenLinksState {\n  links: Array<LinkItem['url']>\n}\n\nfunction getInitialState(): HiddenLinksState {\n  return { links: [] }\n}\n\nexport function hiddenLinks(\n  state = getInitialState(),\n  action: AppActions\n): HiddenLinksState {\n  switch (action.type) {\n    case SET_HIDDEN_LINKS: {\n      return { ...state, links: action.payload }\n    }\n\n    case TOGGLE_HIDDEN_LINK: {\n      const hiddenLinks = state.links.includes(action.payload)\n        ? state.links.filter((link) => link !== action.payload)\n        : [...state.links, action.payload]\n\n      return { ...state, links: hiddenLinks }\n    }\n\n    case TOGGLE_HIDDEN_LINKS_GROUP: {\n      if (action.payload.every((link) => state.links.includes(link))) {\n        // Group is already entirely hidden. Remove all of them from\n        // `hiddenLinks`, which makes all of them visible again.\n        return {\n          ...state,\n          links: state.links.filter((link) => !action.payload.includes(link)),\n        }\n      }\n\n      // At least some links in this group are visible. In this case,\n      // first get all links that are visible, then add them to `hiddenLinks`.\n      const missingLinks = action.payload.filter(\n        (link) => !state.links.includes(link)\n      )\n\n      return { ...state, links: [...state.links, ...missingLinks] }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { SearchTarget } from '../../links'\nimport { AppActions } from '../actions'\nimport { SET_MODE } from '../appMode/appModeActions'\nimport {\n  SET_CURRENT_SEARCH_TARGET,\n  SET_ON_SITE_SEARCH_TERM,\n  SET_SEARCH_TERM\n} from './searchActions'\n\nexport interface SearchState {\n  searchTerm: string\n  onSiteSearchTerm: string\n  searchTarget: SearchTarget | null\n}\n\nfunction getInitialState(): SearchState {\n  return { searchTerm: '', onSiteSearchTerm: '', searchTarget: null }\n}\n\nexport function search(\n  state = getInitialState(),\n  action: AppActions\n): SearchState {\n  switch (action.type) {\n    case SET_SEARCH_TERM: {\n      return { ...state, searchTerm: action.payload }\n    }\n\n    case SET_ON_SITE_SEARCH_TERM: {\n      return { ...state, onSiteSearchTerm: action.payload }\n    }\n\n    case SET_CURRENT_SEARCH_TARGET: {\n      return { ...state, onSiteSearchTerm: '', searchTarget: action.payload }\n    }\n\n    case SET_MODE: {\n      return getInitialState()\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import { LinkItem } from '../../../links'\nimport {\n  getStorageValue,\n  removeStorageValue,\n  setStorageValue,\n  StorageKey\n} from '../localStorageService'\n\nexport function loadHiddenLinks(): Array<LinkItem['url']> {\n  const storageString = getStorageValue(StorageKey.hiddenItems)\n\n  if (storageString === null) {\n    return []\n  }\n\n  try {\n    const storageValue = JSON.parse(storageString)\n\n    if (!Array.isArray(storageValue)) {\n      removeStorageValue(StorageKey.hiddenItems)\n      return []\n    }\n\n    if (storageValue.some((value) => typeof value !== 'string')) {\n      removeStorageValue(StorageKey.hiddenItems)\n      return []\n    }\n\n    return storageValue\n  } catch {\n    removeStorageValue(StorageKey.hiddenItems)\n    return []\n  }\n}\n\nexport function saveHiddenLinks(values: Array<LinkItem['url']>): void {\n  try {\n    const storageString = JSON.stringify(values)\n    setStorageValue(StorageKey.hiddenItems, storageString)\n  } catch {\n    throw new Error('[saveHiddenLinks()] \"values\" is no valid JSON.')\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { WebdevHome } from './components/App/App'\nimport './index.scss'\nimport { store } from './stores'\n\nReactDOM.render(\n  <Provider store={store}>\n    <WebdevHome />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}